majshare = 0.5
Vqres = 100
nv = Vqres - 1
## big data version
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
# Tqres = 1000
# Tqgrid = (1:(Tqres-1))/Tqres
#
# tvec = qfun(Tqgrid)
# nt = length(tvec)
# tmat = reprow(tvec, nv)
# voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
# passvec = (voteshares > majshare) * 1
#
# outtable = data.table(v = vals, pass = passvec)
#########
# Sampled version
#########
Ntries = 1000
subsetN = 10
ind = 1
outdatalist = list()
for(my_subsetN in c(3, 5, 11, 21, 41)) {
d('SUBSET N: ', my_subsetN)
nt = my_subsetN
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
for(i in 1:Ntries) {
d(i)
tvec = rfun(my_subsetN)
nt = my_subsetN
tmat = reprow(tvec, nv)
######
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > majshare) * 1
outtable = data.table(subsetN = my_subsetN, rep = i, v = vals, pass = passvec)
outdatalist[[ind]] = outtable
ind = ind+1
}
}
data = rbindlist(outdatalist)
data[, passrate := mean(pass), by = .(v, subsetN)]
slp(data, v, passrate, subsetN)
slp(data, v, passrate, factor(subsetN))
pnorm(1)
pnorm(2)
setwd('C:/Dropbox/projects/rsmv/code')
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
distcutoff = 1
majshare = 0.5
Vqres = 100
nv = Vqres - 1
## big data version
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
Tqres = 1000
Tqgrid = (1:(Tqres-1))/Tqres
tvec = qfun(Tqgrid)
nt = length(tvec)
tmat = reprow(tvec, nv)
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > majshare) * 1
outtable = data.table(v = vals, passrate = passvec)
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
Tqres = 1000
Tqgrid = (1:(Tqres-1))/Tqres
tvec = qfun(Tqgrid)
nt = length(tvec)
tmat = reprow(tvec, nv)
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > majshare) * 1
outtable = data.table(v = vals, passrate = passvec)
outtable
slp(data, v, passrate)
data = data.table(v = vals, passrate = passvec)
slp(data, v, passrate)
majshare = 0.5
majshare = 0.5
Vqres = 100
nv = Vqres - 1
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
Tqres = 1000
Tqgrid = (1:(Tqres-1))/Tqres
tvec = qfun(Tqgrid)
nt = length(tvec)
tmat = reprow(tvec, nv)
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > majshare) * 1
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
distcutoff = 1
outdatalist = list()
i = 1
for(my_majshare in c(0.1, 0.3, 0.5, 0.7)) {
d('MAJSHARE: ', my_majshare)
majshare = 0.5
Vqres = 100
nv = Vqres - 1
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
Tqres = 1000
Tqgrid = (1:(Tqres-1))/Tqres
tvec = qfun(Tqgrid)
nt = length(tvec)
tmat = reprow(tvec, nv)
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > majshare) * 1
outdata = data.table(majshare = my_majshare, v = vals, passrate = passvec)
outdatalist[[i]] = outdata
i = i+1
}
data = rbindlist(outdatalist)
slp(data, v, passrate, factor(majshare))
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
distcutoff = 1
outdatalist = list()
i = 1
for(my_majshare in c(0.1, 0.3, 0.5, 0.7)) {
d('MAJSHARE: ', my_majshare)
majshare = 0.5
Vqres = 100
nv = Vqres - 1
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
Tqres = 1000
Tqgrid = (1:(Tqres-1))/Tqres
tvec = qfun(Tqgrid)
nt = length(tvec)
tmat = reprow(tvec, nv)
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > majshare) * 1
outdata = data.table(majshare = my_majshare, v = vals, passrate = passvec)
outdatalist[[i]] = outdata
i = i+1
}
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
distcutoff = 1
outdatalist = list()
i = 1
my_majshare = 0.3
Vqres = 100
nv = Vqres - 1
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
Tqres = 1000
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
distcutoff = 1
outdatalist = list()
i = 1
for(my_majshare in c(0.1, 0.3, 0.5, 0.7)) {
d('MAJSHARE: ', my_majshare)
Tqres = 1000
Tqgrid = (1:(Tqres-1))/Tqres
tvec = qfun(Tqgrid)
nt = length(tvec)
Vqres = 100
nv = Vqres - 1
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
tmat = reprow(tvec, nv)
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > majshare) * 1
outdata = data.table(majshare = my_majshare, v = vals, passrate = passvec)
outdatalist[[i]] = outdata
i = i+1
}
data = rbindlist(outdatalist)
slp(data, v, passrate, factor(majshare))
Tqres = 1000
Tqgrid = (1:(Tqres-1))/Tqres
tvec = qfun(Tqgrid)
nt = length(tvec)
Vqres = 100
nv = Vqres - 1
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
tmat = reprow(tvec, nv)
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > majshare) * 1
passvec = (voteshares > my_majshare) * 1
outdata = data.table(majshare = my_majshare, v = vals, passrate = passvec)
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
distcutoff = 1
outdatalist = list()
i = 1
for(my_majshare in c(0.1, 0.3, 0.5, 0.7)) {
d('MAJSHARE: ', my_majshare)
Tqres = 1000
Tqgrid = (1:(Tqres-1))/Tqres
tvec = qfun(Tqgrid)
nt = length(tvec)
Vqres = 100
nv = Vqres - 1
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
tmat = reprow(tvec, nv)
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > my_majshare) * 1
outdata = data.table(majshare = my_majshare, v = vals, passrate = passvec)
outdatalist[[i]] = outdata
i = i+1
}
data = rbindlist(outdatalist)
slp(data, v, passrate, factor(majshare))
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
distcutoff = 1
outdatalist = list()
i = 1
for(my_majshare in c(0.2, 0.35, 0.5, 0.65)) {
d('MAJSHARE: ', my_majshare)
Tqres = 1000
Tqgrid = (1:(Tqres-1))/Tqres
tvec = qfun(Tqgrid)
nt = length(tvec)
Vqres = 100
nv = Vqres - 1
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
tmat = reprow(tvec, nv)
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > my_majshare) * 1
outdata = data.table(majshare = my_majshare, v = vals, passrate = passvec)
outdatalist[[i]] = outdata
i = i+1
}
data = rbindlist(outdatalist)
slp(data, v, passrate, factor(majshare))
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
distcutoff = 1
outdatalist = list()
i = 1
for(my_majshare in c(0.2, 0.35, 0.5, 0.65)) {
d('MAJSHARE: ', my_majshare)
Tqres = 1000
Tqgrid = (1:(Tqres-1))/Tqres
tvec = qfun(Tqgrid)
nt = length(tvec)
Vqres = 1000
nv = Vqres - 1
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
tmat = reprow(tvec, nv)
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > my_majshare) * 1
outdata = data.table(majshare = my_majshare, v = vals, passrate = passvec)
outdatalist[[i]] = outdata
i = i+1
}
data = rbindlist(outdatalist)
slp(data, v, passrate, factor(majshare))
data[, majsharefac := factor(majshare)]
data
source('functions.R')
outplot = ggplot(data, aes(x = v, y = passrate, group = majsharefac, color = majsharefac)) +
geom_line(alpha = alphaparam, size = linesize) +
scale_x_continuous(name = TeX("$t_j$")) +
scale_y_continuous(name = TeX("Admit probability"), label = percent) +
scale_color_manual(name = '% cutoff', values = colorgrid) +
theme_bw() +
theme(text = element_text(size = textsize*2),
legend.text = element_text(size = legendtextsize*2),
axis.text = element_text(size = axistextsize*2),
#axis.title.y = element_text(angle = 0, vjust = 0.5),
legend.position = 'none',
legend.key.size = unit(5,"line"))
outplot = ggplot(data, aes(x = v, y = passrate, group = majsharefac, color = majsharefac)) +
geom_line(alpha = alphaparam, size = linesize) +
scale_x_continuous(name = TeX("$t_j$")) +
scale_y_continuous(name = TeX("Admit probability"), label = percent) +
#scale_color_manual(name = '% cutoff', values = colorgrid) +
theme_bw() +
theme(text = element_text(size = textsize*2),
legend.text = element_text(size = legendtextsize*2),
axis.text = element_text(size = axistextsize*2),
#axis.title.y = element_text(angle = 0, vjust = 0.5),
legend.position = 'none',
legend.key.size = unit(5,"line"))
outplot
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
distcutoff = 1
majshare = 0.5
Vqres = 100
nv = Vqres - 1
## big data version
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
# Tqres = 1000
# Tqgrid = (1:(Tqres-1))/Tqres
#
# tvec = qfun(Tqgrid)
# nt = length(tvec)
# tmat = reprow(tvec, nv)
# voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
# passvec = (voteshares > majshare) * 1
#
# outtable = data.table(v = vals, pass = passvec)
#########
# Sampled version
#########
Ntries = 1000
subsetN = 10
ind = 1
outdatalist = list()
for(my_subsetN in c(3, 5, 11, 21, 41)) {
d('SUBSET N: ', my_subsetN)
nt = my_subsetN
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
for(i in 1:Ntries) {
d(i)
tvec = rfun(my_subsetN)
nt = my_subsetN
tmat = reprow(tvec, nv)
######
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > majshare) * 1
outtable = data.table(subsetN = my_subsetN, rep = i, v = vals, pass = passvec)
outdatalist[[ind]] = outtable
ind = ind+1
}
}
data = rbindlist(outdatalist)
data[, passrate := mean(pass), by = .(v, subsetN)]
slp(data, v, passrate, factor(subsetN))
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
distcutoff = 1
majshare = 0.5
Vqres = 100
nv = Vqres - 1
#########
# Sampled version
#########
Ntries = 1000
subsetN = 10
ind = 1
outdatalist = list()
for(my_subsetN in c(3, 5, 11, 21, 41)) {
d('SUBSET N: ', my_subsetN)
nt = my_subsetN
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
for(i in 1:Ntries) {
d(i)
tvec = rfun(my_subsetN)
nt = my_subsetN
tmat = reprow(tvec, nv)
######
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > majshare) * 1
outtable = data.table(subsetN = my_subsetN, rep = i, v = vals, pass = passvec)
outdatalist[[ind]] = outtable
ind = ind+1
}
}
data = rbindlist(outdatalist)
data[, passrate := mean(pass), by = .(v, subsetN)]
slp(data, v, passrate, factor(subsetN))
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
distcutoff = 1
majshare = 0.5
Vqres = 1000
nv = Vqres - 1
#########
# Sampled version
#########
Ntries = 1000
subsetN = 10
ind = 1
outdatalist = list()
for(my_subsetN in c(3, 5, 11, 21, 41)) {
d('SUBSET N: ', my_subsetN)
nt = my_subsetN
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
for(i in 1:Ntries) {
d(i)
tvec = rfun(my_subsetN)
nt = my_subsetN
tmat = reprow(tvec, nv)
######
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > majshare) * 1
outtable = data.table(subsetN = my_subsetN, rep = i, v = vals, pass = passvec)
outdatalist[[ind]] = outtable
ind = ind+1
}
}
data = rbindlist(outdatalist)
data[, passrate := mean(pass), by = .(v, subsetN)]
slp(data, v, passrate, factor(subsetN))
data
data
subdata = data[, .(passrate := mean(pass)), by = .(v, subsetN)]
subdata = data[, .(passrate = mean(pass)), by = .(v, subsetN)]
slp(subdata, v, passrate, factor(subsetN))
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
distcutoff = 1
majshare = 0.5
Vqres = 1000
nv = Vqres - 1
#########
# Sampled version
#########
Ntries = 5000
subsetN = 10
ind = 1
outdatalist = list()
for(my_subsetN in c(3, 5, 11, 21, 41)) {
d('SUBSET N: ', my_subsetN)
nt = my_subsetN
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
for(i in 1:Ntries) {
d(i)
tvec = rfun(my_subsetN)
nt = my_subsetN
tmat = reprow(tvec, nv)
######
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > majshare) * 1
outtable = data.table(subsetN = my_subsetN, rep = i, v = vals, pass = passvec)
outdatalist[[ind]] = outtable
ind = ind+1
}
}
data = rbindlist(outdatalist)
subdata = data[, .(passrate = mean(pass)), by = .(v, subsetN)]
slp(subdata, v, passrate, factor(subsetN))
setwd('C:/Dropbox/projects/rsmv/code')
rm(list = ls())
source('functions.R')
distcutoff = 1
majshare = 0.5
Vqres = 1000
nv = Vqres - 1
#########
# Sampled version
#########
Ntries = 5000
subsetN = 10
ind = 1
outdatalist = list()
for(my_subsetN in c(3, 5, 11, 21, 41)) {
d('SUBSET N: ', my_subsetN)
nt = my_subsetN
Vqgrid = (1:(Vqres-1))/Vqres
vals = qfun(Vqgrid)
valmat = repcol(vals, nt)
for(i in 1:Ntries) {
d(i)
tvec = rfun(my_subsetN)
nt = my_subsetN
tmat = reprow(tvec, nv)
######
voteshares = rowSums((abs(valmat - tmat) < distcutoff) * 1/nt)
passvec = (voteshares > majshare) * 1
outtable = data.table(subsetN = my_subsetN, rep = i, v = vals, pass = passvec)
outdatalist[[ind]] = outtable
ind = ind+1
}
}
data = rbindlist(outdatalist)
fwrite(data, file = '../results/subsets_fulldata.csv')
subdata = data[, .(passrate = mean(pass)), by = .(v, subsetN)]
fwrite(subdata, file = '../results/subsets_sumdata.csv')
